const double x0 = pow(uz, 2);;
const double x1 = 3*x0;;
const double x2 = pow(ux, 2);;
const double x3 = 3*x2;;
const double x4 = pow(uy, 2);;
const double x5 = 3*x4;;
const double x6 = x3 + x5;;
const double x7 = 6*uz;;
const double x8 = -x7;;
const double x9 = 18*uz;;
const double x10 = x2*x9;;
const double x11 = x4*x9;;
const double x12 = x10 + x11 + x8;;
const double x13 = -2*tp;;
const double x14 = -6*x0 + x13;;
const double x15 = (1.0/36.0)*rho;;
const double x16 = -x5;;
const double x17 = 6*x0;;
const double x18 = 2*tp;;
const double x19 = x18 - x3;;
const double x20 = x17 + x19;;
const double x21 = x1 + x13;;
const double x22 = 6*uy;;
const double x23 = -x22;;
const double x24 = 18*uy;;
const double x25 = x2*x24;;
const double x26 = x0*x24;;
const double x27 = x23 + x25 + x26;;
const double x28 = -6*x4;;
const double x29 = x28 + x3;;
const double x30 = -x1;;
const double x31 = 6*x4;;
const double x32 = x30 + x31;;
const double x33 = 6*ux;;
const double x34 = -x33;;
const double x35 = 18*ux;;
const double x36 = x35*x4;;
const double x37 = x0*x35;;
const double x38 = x34 + x36 + x37;;
const double x39 = -6*x2;;
const double x40 = x39 + x5;;
const double x41 = x18 + 6*x2;;
const double x42 = x16 + x41;;
const double x43 = uy*x9;;
const double x44 = x20 + x22 + x26 + x31;;
const double x45 = x11 + x7;;
const double x46 = (1.0/72.0)*rho;;
const double x47 = -x43;;
const double x48 = x45 + x47;;
const double x49 = ux*x9;;
const double x50 = x17 + x33 + x37 + x42;;
const double x51 = x10 + x7;;
const double x52 = -x49;;
const double x53 = x51 + x52;;
const double x54 = ux*x24;;
const double x55 = x32 + x33 + x36 + x41;;
const double x56 = x22 + x25;;
const double x57 = -x54;;
const double x58 = x56 + x57;;
fEq[0] = (1.0/6.0)*rho*(-4*tp - x1 - x6 + 6);
fEq[1] = x15*(-x12 - x14 - x6);
fEq[2] = x15*(x12 + x16 + x20);
fEq[3] = x15*(-x21 - x27 - x29);
fEq[4] = x15*(x19 + x27 + x32);
fEq[5] = x15*(-x21 - x38 - x40);
fEq[6] = x15*(x30 + x38 + x42);
fEq[7] = x46*(x43 + x44 + x45);
fEq[8] = x46*(-x11 + x44 + x47 + x8);
fEq[9] = x46*(x20 + x23 - x26 + x31 + x48);
fEq[10] = x46*(-x14 - x22 - x26 - x29 - x48);
fEq[11] = x46*(x49 + x50 + x51);
fEq[12] = x46*(-x10 + x50 + x52 + x8);
fEq[13] = x46*(x17 + x34 - x37 + x42 + x53);
fEq[14] = x46*(-x14 - x33 - x37 - x40 - x53);
fEq[15] = x46*(x54 + x55 + x56);
fEq[16] = x46*(x23 - x25 + x55 + x57);
fEq[17] = x46*(x32 + x34 - x36 + x41 + x58);
fEq[18] = x46*(-x21 - x28 - x33 - x36 - x39 - x58);